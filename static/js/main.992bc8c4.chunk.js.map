{"version":3,"sources":["Layout/Header.js","Layout/NotFound.js","utils/api/index.js","Layout/Home/DeckList.js","Layout/Home/Deck/DeckForm.js","Layout/Home/CreateDeck/CreateDeck.js","Layout/Home/Home.js","Layout/Home/Deck/CardList.js","Layout/Home/Deck/Deck.js","Layout/Home/Deck/CardForm.js","Layout/Home/Deck/AddCard/AddCard.js","Layout/Home/Study/Study.js","Layout/Home/Deck/EditDeck/EditDeck.js","Layout/Home/Deck/EditCard/EditCard.js","Layout/index.js","App.js","index.js"],"names":["Header","className","NotFound","API_BASE_URL","process","headers","Headers","stripCards","deck","cards","fetchJson","url","options","onCancel","fetch","response","status","Error","statusText","json","name","console","error","stack","Promise","resolve","listDecks","signal","createDeck","method","body","JSON","stringify","readDeck","deckId","updateDeck","updatedDeck","id","deleteDeck","createCard","card","Number","readCard","cardId","updateCard","updatedCard","deleteCard","append","DeckList","decks","deleteHandler","AbortController","log","listing","map","length","description","style","display","justifyContent","margin","to","type","onClick","DeckForm","submitHandler","formData","changeHandler","onSubmit","event","htmlFor","value","onChange","required","CreateDeck","abortController","useState","setFormData","history","useHistory","preventDefault","push","handleSubmit","target","Home","setDecks","window","confirm","useEffect","allDecks","grabDecks","abort","CardList","deleteCardHandler","useRouteMatch","list","fontSize","front","back","Deck","initialValue","useParams","setDeck","path","current","currentDeck","go","deleteDeckHandler","CardForm","AddCard","Study","cardIndex","setCardIndex","frontOrBack","setFrontOrBack","currentCard","EditDeck","EditCard","initialCard","initialDeck","setCard","Layout","exact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.992bc8c4.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header className=\"jumbotron bg-dark\">\n      <div className=\"container text-white\">\n        <h1 className=\"display-4\">Flashcard-o-matic</h1>\n        <p className=\"lead\">Discover The Flashcard Difference.</p>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n\nexport default NotFound;\n","/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nconst API_BASE_URL = process.env.API_BASE_URL || \"http://localhost:8080\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Removes the `cards` property from the deck so it is not accidentally saved with the deck.\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param deck\n *  the deck instance\n * @returns {*}\n *  a copy of the deck instance with the `cards` property removed.\n */\nfunction stripCards(deck) {\n  const { cards, ...deckWithoutCards } = deck;\n  return deckWithoutCards;\n}\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the requst.\n * @param options\n *  any options for fetch\n * @param onCancel\n *  default value returned if the fetch is cancelled.\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\n\nasync function fetchJson(url, options, onCancel) {\n  try {\n    const response = await fetch(url, options);\n\n    if (response.status < 200 || response.status > 399) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    if (response.status === 204) {\n      return null;\n    }\n\n    return await response.json();\n\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      console.error(error.stack);\n      throw error;\n    }\n    return Promise.resolve(onCancel);\n  }\n}\n\n/**\n * Retrieves all existing decks.\n * @returns {Promise<[deck]>}\n *  a promise that resolves to a possibly empty array of decks saved in the database.\n */\nexport async function listDecks(signal) {\n  const url = `${API_BASE_URL}/decks?_embed=cards`;\n  return await fetchJson(url, { signal }, []);\n}\n\n/**\n * Saves deck to the database (public/data/db.json).\n * There is no validation done on the deck object, any object will be saved.\n * @param deck\n *  the deck to save, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<deck>}\n *  a promise that resolves the saved deck, which will now have an `id` property.\n */\nexport async function createDeck(deck, signal) {\n  const url = `${API_BASE_URL}/decks`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(stripCards(deck)),\n    signal,\n  };\n  return await fetchJson(url, options, {});\n}\n\n/**\n * Retrieves the deck with the specified `deckId`\n * @param deckId\n *  the `id` property matching the desired deck.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<any>}\n *  a promise that resolves to the saved deck.\n */\nexport async function readDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}?_embed=cards`;\n  return await fetchJson(url, { signal }, {});\n}\n\n/**\n * Updates an existing deck\n * @param updatedDeck\n *  the deck to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated deck.\n */\nexport async function updateDeck(updatedDeck, signal) {\n  const url = `${API_BASE_URL}/decks/${updatedDeck.id}?_embed=cards`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(stripCards(updatedDeck)),\n    signal,\n  };\n  return await fetchJson(url, options, updatedDeck);\n}\n\n/**\n * Deletes the deck with the specified `deckId`.\n * @param deckId\n *  the id of the deck to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n\n/**\n * Creates a new card associated with the specified `deckId`.\n * There is no validation that there is an existing deck with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param card\n *  the card to create, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the new card, which will have an `id` property.\n */\nexport async function createCard(deckId, card, signal) {\n  // There is a bug in json-server, if you post to /decks/:deckId/cards the associated deckId is a string\n  // and the card is not related to the deck because the data types of the ID's are different.\n  const url = `${API_BASE_URL}/cards`;\n  card.deckId = Number(deckId);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(card),\n    signal,\n  };\n  return await fetchJson(url, options, card);\n}\n\n/**\n * Retrieves the card with the specified `cardId`\n * @param cardId\n *  the id of the target\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the saved card.\n */\nexport async function readCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  return await fetchJson(url, { signal }, {});\n}\n\n/**\n * Updates an existing deck\n * @param updatedCard\n *  the card to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated card.\n */\nexport async function updateCard(updatedCard, signal) {\n  const url = `${API_BASE_URL}/cards/${updatedCard.id}`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(updatedCard),\n  };\n  return await fetchJson(url, options, updatedCard);\n}\n\n/**\n * Deletes the card with the specified `cardId`.\n * @param cardId\n *  the id of the card to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch\r\n  } from \"react-router-dom\";\r\n\r\nfunction DeckList({ decks = [], deleteHandler}) {\r\n\r\n  const abortController = new AbortController();\r\n    const signal = abortController.signal;\r\n  console.log(decks)\r\n\r\n/* Format example\r\n<div class=\"card\">\r\n  <div class=\"card-header\">\r\n    Featured\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <h5 class=\"card-title\">Special title treatment</h5>\r\n    <p class=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n    <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\r\n  </div>\r\n</div>\r\n*/\r\n\r\n\r\n\r\n\r\n    const listing = decks.map((deck) => { return (\r\n    <div key={deck.id} className=\"card\">\r\n     <div className=\"card-header\">{deck.name}</div>\r\n     <div className=\"card-body\">\r\n      <p>{`${deck.cards.length} cards`}</p>\r\n      <p>{deck.description}</p> \r\n        <div className=\"row\" style={{display: \"flex\", justifyContent: \"left\", margin: \"8px\"}}>\r\n          <Link to={`/decks/${deck.id}`} className=\"btn btn-secondary\">View</Link>\r\n          <Link to={`/decks/${deck.id}/study`} className=\"btn btn-primary\">study</Link>\r\n          <button type=\"button\" onClick={() => deleteHandler(deck.id, signal)} className=\"btn btn-danger\">Delete</button> \r\n        </div>\r\n    </div>\r\n    </div>\r\n    )\r\n    })\r\n\r\n    \r\n\r\n    return <div>{listing}</div>\r\n\r\n\r\n}\r\n\r\nexport default DeckList","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction DeckForm({ deckId, submitHandler, formData, changeHandler }) {\r\n    return (\r\n        \r\n            <form onSubmit={(event) => submitHandler(event)}>\r\n\r\n            <div className=\"row col-4\">\r\n                <label htmlFor=\"name\">Name</label>\r\n            </div>\r\n\r\n            <div className=\"row col-4\">\r\n                <input type=\"text\" id=\"name\" name=\"name\" className=\"form-control\" value={formData.name} onChange={(event) => changeHandler(event)} required />  \r\n            </div>\r\n\r\n            <div className=\"row col-4\">\r\n                <label htmlFor=\"description\">description</label>\r\n            </div>\r\n\r\n            <div className=\"row col-4\">\r\n                <textarea id=\"description\" className=\"form-control\" name=\"description\" value={formData.description} onChange={(event) => changeHandler(event)} required />\r\n            </div>\r\n\r\n            {deckId ? <Link to={`/decks/${deckId}`} className=\"btn btn-secondary\">Cancel</Link> : <Link to={`/`} className=\"btn btn-secondary\">Cancel</Link>}\r\n\r\n\r\n                <button type=\"submit\"  className=\"btn btn-primary\">Submit</button>\r\n            </form>\r\n\r\n    )\r\n}\r\n\r\nexport default DeckForm","import React from \"react\";\r\nimport { Link , Route , useHistory} from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { createDeck } from \"../../../utils/api\";\r\nimport DeckForm from \"../Deck/DeckForm\";\r\n\r\n\r\n\r\nfunction CreateDeck() {\r\n\r\n  const abortController = new AbortController();\r\n\r\n   const initialState = {\r\n    name: \"\",\r\n    description: \"\",\r\n   };\r\n\r\n   const [formData, setFormData] = useState({...initialState});\r\n   const history = useHistory()\r\n\r\n   function changeHandler({ target }) {\r\n    setFormData({\r\n        ...formData,\r\n        [target.name]: target.value,\r\n    })\r\n\r\n   }\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    await createDeck(formData, abortController.signal);\r\n    history.push(\"/\");\r\n   }\r\n\r\n\r\n   /* Breadcrumb example\r\n\r\n   <nav aria-label=\"breadcrumb\">\r\n  <ol class=\"breadcrumb\">\r\n    <li class=\"breadcrumb-item active\" aria-current=\"page\">Home</li>\r\n  </ol>\r\n</nav>\r\n\r\n*/\r\n   \r\n\r\n   return (\r\n    <div>\r\n        <nav aria-label=\"breadcrumb\">\r\n            <ol className=\"breadcrumb\">      \r\n                <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>  \r\n                <li className=\"breadcrumb-item active\">Create Deck</li>          \r\n             </ol>\r\n        </nav>\r\n        <h2>Create Deck</h2>\r\n        <DeckForm handleSubmit={handleSubmit} formData={formData} changeHandler={changeHandler} />\r\n    </div>\r\n   )\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default CreateDeck\r\n","import React from \"react\";\r\nimport { useState , useEffect } from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch,\r\n    useHistory\r\n  } from \"react-router-dom\";\r\nimport { listDecks, deleteDeck } from \"../../utils/api\";\r\nimport DeckList from \"./DeckList\";\r\nimport CreateDeck from \"./CreateDeck/CreateDeck\";\r\n\r\n\r\n  function Home() {\r\n\r\n    const history = useHistory()\r\n\r\n    const [decks, setDecks] = useState([]);\r\n\r\n    const abortController = new AbortController();\r\n    const signal = abortController.signal;\r\n\r\n\r\n    useEffect(() => {\r\n      setDecks([])\r\n\r\n      async function grabDecks() {  \r\n        try {\r\n          const allDecks = await listDecks(signal);\r\n          console.log(allDecks)\r\n          if (allDecks.length > 0) setDecks(allDecks)\r\n        } catch (error) {console.log(error)}\r\n}\r\n        grabDecks();\r\n\r\n\r\n      \r\n\r\n\r\n            \r\n        return () => abortController.abort()\r\n\r\n    }, [])\r\n\r\n    \r\nasync function deleteHandler(id, signal) {\r\n        if (window.confirm(\"Delete this deck?\\nYou will not be able to recover it.\")) {\r\n           try {\r\n            \r\n            await deleteDeck(id, signal);\r\n            history.push(\"/\")\r\n          } catch (error) {console.log(error)}\r\n          }\r\n        }\r\n        \r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Link to=\"/decks/new\" className=\"btn btn-secondary\">Create</Link>\r\n            <DeckList decks={decks} deleteHandler={deleteHandler} />\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  export default Home","import React from \"react\";\r\nimport { Link , useRouteMatch } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction CardList({ deck , deleteCardHandler }) {\r\n\r\n    const { url } = useRouteMatch();\r\n\r\n    \r\n  \r\n \r\n    const list = deck.cards.map(card => {\r\n      return  ( <div className=\"card\" key={card}>\r\n            <div className=\"card-body\" >\r\n                <div className=\"row\" style={{display: \"flex\", justifyContent: \"space-evenly\", fontSize: \"20px\"}}>\r\n                    <div>{card.front}</div>\r\n                    <div>{card.back}</div>\r\n                </div>\r\n                <div>\r\n                    <Link to={`${url}/cards/${card.id}/edit`} className=\"btn btn-secondary\">Edit</Link>\r\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={() => deleteCardHandler(card.id)}>Delete</button>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n    });\r\n \r\n\r\n\r\n    return (\r\n        <div>\r\n            {list}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CardList","import React, { useEffect , useState} from \"react\";\r\nimport { readDeck , deleteDeck, deleteCard } from \"../../../utils/api\";\r\nimport { useParams , useRouteMatch , Link , useHistory} from \"react-router-dom\";\r\nimport CardList from \"./CardList\";\r\n\r\n\r\n\r\nfunction Deck() {\r\n\r\n    const initialValue = {\r\n        name: \"\",\r\n        description: \"\",\r\n        cards: []\r\n    }\r\n\r\n    const { deckId } = useParams();\r\n    const [deck, setDeck] = useState(initialValue);\r\n    const abortController = new AbortController();\r\n    const { path, url } = useRouteMatch();\r\n\r\n    //useEffect here is grabbing the current deck using browser parameters so we can render the cards below using deck state\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n    setDeck(initialValue);\r\n        \r\n    async function currentDeck(id) {\r\n        try{\r\n        const current = await readDeck(id, abortController.signal);\r\n        setDeck({...current})\r\n        \r\n        } catch(error) {console.log(error)};\r\n    };\r\n\r\n    //getting and returning the deck fine but having issues setting state \r\n    \r\n    currentDeck(deckId);\r\n    \r\n    return () => abortController.abort()\r\n\r\n    }, [deckId])\r\n\r\n    const history = useHistory();\r\n\r\n    async function deleteDeckHandler(id, signal) {\r\n        if (window.confirm(\"Delete this deck?\\nYou will not be able to recover it.\")) {\r\n           try {\r\n            \r\n            await deleteDeck(id, signal);\r\n            history.push(\"/\")\r\n          } catch (error) {console.log(error)}\r\n          }\r\n        }\r\n\r\n    async function deleteCardHandler(id, signal) {\r\n        if (window.confirm(\"Delete this card?\\nYou will not be able to recover it.\")) {\r\n            try {\r\n             \r\n             await deleteCard(id, signal);\r\n             history.go(0);\r\n           } catch (error) {console.log(error)}\r\n           }\r\n         }\r\n    \r\n    \r\n\r\n    //now HOPEFULLY we have grabbed the cards the readDecks function should be returning an object that looks like this \r\n\r\n    /* \r\n    {name: 'Note Taking', description: 'need to make sure the delete handler in useDecks rerenders the home page ', id: 1, cards: Array(0)}\r\n    */\r\n\r\n    //we will be using nested routes on this specific componenet\r\n\r\n    return (\r\n        <div>\r\n            <nav aria-label=\"breadcrumb\">\r\n                <ol className=\"breadcrumb\">\r\n                  <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\r\n                  <li className=\"breadcrumb-item\"><p>Create Deck</p></li>\r\n                </ol>\r\n            </nav>\r\n\r\n            <div>\r\n                <h4>{deck.name}</h4>\r\n                <p>{deck.description}</p>\r\n                <div>\r\n                    <Link to={`${url}/edit`} className=\"btn btn-secondary\">edit</Link>\r\n                    <Link to={`${url}/study`} className=\"btn btn-primary\">study</Link>\r\n                    <Link to={`${url}/cards/new`} className=\"btn btn-primary\">Add Cards</Link>\r\n                    <button type=\"button\" onClick={() => deleteDeckHandler(deckId, abortController.signal)} className=\"btn btn-danger\">Delete icon goes here</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <h2>Cards</h2>\r\n                <CardList deck={deck} deleteCardHandler={deleteCardHandler} />\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Deck","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CardForm({submitHandler, formData, changeHandler, deckId}) {\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n\r\n            <div className=\"row col-4\">\r\n                <label htmlFor=\"front\">front</label>\r\n            </div>\r\n\r\n            <div className=\"row col-4\">\r\n                <textarea id=\"front\" name=\"front\" className=\"form-control\" value={formData.front} onChange={changeHandler} required /> \r\n            </div>\r\n\r\n            <div className=\"row col-4\">\r\n                <label htmlFor=\"back\">back</label>\r\n            </div>\r\n\r\n            <div className=\"row col-4\">\r\n                <textarea id=\"back\" name=\"back\" className=\"form-control\" value={formData.back} onChange={changeHandler} required />\r\n            </div>\r\n\r\n                <Link to={`/decks/${deckId}`} className=\"btn btn-secondary\">Cancel</Link>\r\n                <button type=\"submit\"  className=\"btn btn-primary\">Submit</button>\r\n            </form>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default CardForm","import React from \"react\";\r\nimport { useParams , Link , useHistory} from \"react-router-dom\";\r\nimport { useEffect , useState } from \"react\";\r\nimport { readDeck , createCard } from \"../../../../utils/api\";\r\nimport CardForm from \"../CardForm\";\r\n\r\n\r\nfunction AddCard() {\r\n    \r\n    const abortController = new AbortController();\r\n\r\n    const initialValue = {\r\n        name: \"\",\r\n        description: \"\"\r\n    }\r\n\r\n    const [deck, setDeck] = useState(initialValue);\r\n    const { deckId } = useParams();\r\n\r\n    useEffect(() => {\r\n        setDeck(initialValue);\r\n            \r\n        async function currentDeck(id) {\r\n            try{\r\n            const current = await readDeck(id, abortController.signal);\r\n            setDeck({...current})\r\n            \r\n            } catch(error) {console.log(error)};\r\n        };\r\n    \r\n        \r\n        \r\n        currentDeck(deckId);\r\n        \r\n        return () => abortController.abort()\r\n    \r\n        }, [deckId])\r\n\r\n    //we have the deck stored in deck variable \r\n\r\n    const initialState = {\r\n        front: \"\",\r\n        back: \"\",\r\n       };\r\n    \r\n       const [formData, setFormData] = useState({...initialState});\r\n       const history = useHistory()\r\n    \r\n       function changeHandler({ target }) {\r\n        setFormData({\r\n            ...formData,\r\n            [target.name]: target.value,\r\n        })\r\n    \r\n       }\r\n\r\n       async function submitHandler(event) {\r\n        event.preventDefault(); \r\n        await createCard(deckId, formData, abortController.signal)\r\n        history.go(0);\r\n       }\r\n\r\n    return (\r\n        <div>\r\n            <nav aria-label=\"breadcrumb\">\r\n                <ol className=\"breadcrumb\">\r\n                    <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\r\n                    <li className=\"breadcrumb-item\"><Link to={`/decks/${deckId}`}>{deck.name}</Link></li>\r\n                    <li className=\"breadcrumb-item\"><p>Add card</p></li>\r\n                </ol>\r\n            </nav>\r\n            <h4>{`${deck.name}: Add Card`}</h4>\r\n            <CardForm submitHandler={submitHandler} formData={formData} changeHandler={changeHandler} deckId={deckId} />\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default AddCard\r\n","import React, { useEffect , useState} from \"react\";\r\nimport { readDeck } from \"../../../utils/api\";\r\nimport { useParams , Link , useHistory} from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction Study() {\r\n    const history = useHistory()\r\n\r\n    const initialValue = {\r\n        name: \"\",\r\n        description: \"\",\r\n        cards: [{front: \"\", back: \"\"}]\r\n    }\r\n\r\n    const { deckId } = useParams();\r\n    const [deck, setDeck] = useState(initialValue);\r\n    const abortController = new AbortController();\r\n\r\n    useEffect(() => {\r\n        setDeck(initialValue);\r\n            \r\n        async function currentDeck(id) {\r\n            try{\r\n            const current = await readDeck(id, abortController.signal);\r\n            setDeck({...current})\r\n            \r\n            } catch(error) {console.log(error)};\r\n        };\r\n    \r\n        //getting and returning the deck fine but having issues setting state \r\n        \r\n        currentDeck(deckId);\r\n        \r\n        return () => abortController.abort()\r\n    \r\n        }, [deckId]);\r\n\r\n    const [cardIndex, setCardIndex] = useState(0);\r\n    const [ frontOrBack, setFrontOrBack ] = useState(false);\r\n        \r\n       \r\n    const { cards } = deck;\r\n    \r\n    let currentCard = cards[cardIndex];\r\n    \r\n    function nextHandler() {\r\n        if ((cardIndex + 1) === cards.length) {\r\n            window.confirm(\"Restart Cards?\") ? history.go(0) : history.push(\"/\");\r\n        } else {\r\n        setCardIndex((cardIndex)  => cardIndex + 1); \r\n        setFrontOrBack((current) => !current);}\r\n    }\r\n\r\n\r\n    if (cards.length <= 2) {\r\n\r\n        return (\r\n            <div>\r\n                <nav aria-label=\"breadcrumb\">\r\n                    <ol className=\"breadcrumb\">\r\n                        <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\r\n                        <li className=\"breadcrumb-item\"><Link to={`/decks/${deckId}`}>{deck.name}</Link></li>\r\n                        <li className=\"breadcrumb-item\"><p>Study</p></li>\r\n                    </ol>\r\n                </nav>\r\n\r\n                <h4>Not Enough cards.</h4>\r\n                <p>You need at least 3 cards to study. There are {cards.length} in this deck</p>\r\n                <Link to={`/decks/${deckId}/cards/new`} className=\"btn btn-primary\">Add Cards</Link>\r\n            </div>\r\n            \r\n        )\r\n\r\n    } else { \r\n\r\n        return (\r\n            <div>\r\n                <nav aria-label=\"breadcrumb\">\r\n                    <ol className=\"breadcrumb\">\r\n                        <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\r\n                        <li className=\"breadcrumb-item\"><Link to={`/decks/${deckId}`}>{deck.name}</Link></li>\r\n                        <li className=\"breadcrumb-item\"><p>Study</p></li>\r\n                    </ol>\r\n                </nav>\r\n                <h2>{`Study: ${deck.name}`}</h2>\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        <h3>{`Card ${cardIndex + 1} of ${cards.length}`}</h3>\r\n                    </div>\r\n\r\n                    <div className=\"card-body\">\r\n                    <div>{!frontOrBack ? <p>{currentCard.front}</p> : <p>{currentCard.back}</p>}</div>\r\n\r\n\r\n                    <div className=\"row\">\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={() => setFrontOrBack((current) => !current)}>Flip</button>\r\n                        <div>{frontOrBack ? <button type=\"button\" className=\"btn btn-secondary\" onClick={nextHandler}>Next</button> : <p></p>}</div>\r\n                    </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\n}\r\n\r\nexport default Study","import React, { useEffect , useState} from \"react\";\r\nimport { readDeck , updateDeck } from \"../../../../utils/api\";\r\nimport { useParams , Link , useHistory } from \"react-router-dom\";\r\nimport DeckForm from \"../DeckForm\";\r\n\r\nfunction EditDeck() {\r\n\r\n    const initialValue = {\r\n        name: \"\",\r\n        description: \"\",\r\n        cards: []\r\n    }\r\n\r\n    const { deckId } = useParams();\r\n    const [deck, setDeck] = useState(initialValue);\r\n    const abortController = new AbortController();\r\n    \r\n    const initialState = {\r\n        name: \"\",\r\n        description: \"\"\r\n    }\r\n\r\n    const [formData, setFormData] = useState({...initialState});\r\n\r\n    const initialStateRender = {\r\n            name: `${deck.name}`,\r\n            description: `${deck.description}`,\r\n           };\r\n\r\n    useEffect(() => {\r\n        setDeck(initialValue);\r\n            \r\n        async function currentDeck(id) {\r\n            try{\r\n            const current = await readDeck(id, abortController.signal);\r\n            setDeck({...current})\r\n            setFormData({...current})\r\n\r\n            \r\n            } catch(error) {console.log(error)};\r\n        };\r\n    \r\n        //getting and returning the deck fine but having issues setting state \r\n        \r\n        currentDeck(deckId);\r\n        \r\n        return () => abortController.abort()\r\n    \r\n        }, [deckId]);\r\n\r\n        //formData Stuff\r\n\r\n        \r\n        \r\n        \r\n           \r\n           \r\n        \r\n           function changeHandler({ target }) {\r\n            setFormData({\r\n                ...formData,\r\n                [target.name]: target.value,\r\n            })\r\n        \r\n           }\r\n\r\n           const history = useHistory();\r\n\r\n           async function submitHandler(event) {\r\n            console.log(deck)\r\n            event.preventDefault();\r\n           \r\n            const updatedDeck = {...deck, name: formData.name, description: formData.description}\r\n           \r\n            await updateDeck(updatedDeck, abortController.signal);\r\n            history.go(0);\r\n\r\n           }\r\n\r\n           //may have to put this into a useEffect \r\n           \r\n\r\n    return (\r\n        <div>\r\n            <nav aria-label=\"breadcrumb\">\r\n              <ol className=\"breadcrumb\">\r\n              <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\r\n              <li className=\"breadcrumb-item\"><Link to={`/decks/${deckId}`}>{deck.name}</Link></li>\r\n              <li className=\"breadcrumb-item\"><p>Edit Deck</p></li>\r\n              </ol>\r\n            </nav>\r\n            <h2>Edit Deck</h2>\r\n            <DeckForm deckId={deckId} submitHandler={submitHandler} formData={formData} changeHandler={changeHandler} />\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default EditDeck","import React, { useEffect , useState} from \"react\";\r\nimport { readCard, readDeck , updateCard } from \"../../../../utils/api\";\r\nimport { useParams , Link , useHistory } from \"react-router-dom\";\r\nimport CardForm from \"../CardForm\";\r\n\r\n\r\nfunction EditCard() {\r\n\r\n    const initialCard = {\r\n        front: \"\",\r\n        back: \"\",\r\n    }\r\n\r\n    const initialDeck = {\r\n        name: \"\",\r\n        description: \"\",\r\n        cards: []\r\n    }\r\n\r\n\r\n    const { cardId , deckId } = useParams();\r\n    const [card, setCard] = useState(initialCard);\r\n    const [deck, setDeck] = useState(initialDeck);\r\n    const abortController = new AbortController();\r\n    const [formData, setFormData] = useState({...initialCard});\r\n\r\n    useEffect(() => {\r\n        setDeck(initialDeck);\r\n        setCard(initialCard);\r\n            \r\n        async function currentDeck(deckId, cardId) {\r\n            try{\r\n            const currentDeck = await readDeck(deckId, abortController.signal);\r\n            const currentCard = await readCard(cardId, abortController.signal);\r\n            setDeck({...currentDeck});\r\n            setCard({...currentCard});\r\n            setFormData({...currentCard});\r\n            \r\n            } catch(error) {console.log(error)};\r\n        };\r\n    \r\n        //getting and returning the deck fine but having issues setting state \r\n        \r\n        currentDeck(deckId, cardId);\r\n        \r\n        return () => abortController.abort()\r\n    \r\n        }, [deckId]);\r\n\r\n\r\n    \r\n\r\n    function changeHandler({ target }) {\r\n        setFormData({\r\n            ...formData,\r\n            [target.name]: target.value,\r\n        })\r\n    \r\n       }\r\n\r\n       const history = useHistory();\r\n\r\n       async function submitHandler(event) {\r\n        \r\n        event.preventDefault();\r\n       \r\n        const updatedCard = {...card, front: formData.front, back: formData.back}\r\n       \r\n        await updateCard(updatedCard, abortController.signal);\r\n        history.go(0);\r\n\r\n       }\r\n\r\n\r\n\r\n       return (\r\n        <div>\r\n            <nav aria-label=\"breadcrumb\">\r\n                <ol className=\"breadcrumb\">\r\n                    <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\r\n                    <li className=\"breadcrumb-item\"><Link to={`/decks/${deckId}`}>{deck.name}</Link></li>\r\n                    <li className=\"breadcrumb-item\"><p>{`Edit Card ${card.id}`}</p></li>\r\n                </ol>\r\n            </nav>\r\n            <h2>Edit Card</h2>\r\n            <CardForm submitHandler={submitHandler} formData={formData} changeHandler={changeHandler} deckId={deckId} />\r\n\r\n        </div>\r\n       )\r\n\r\n\r\n\r\n}\r\n\r\nexport default EditCard","import React from \"react\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport Home from \"./Home/Home\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CreateDeck from \"./Home/CreateDeck/CreateDeck\";\nimport Deck from \"./Home/Deck/Deck\";\nimport AddCard from \"./Home/Deck/AddCard/AddCard\";\nimport Study from \"./Home/Study/Study\";\nimport EditDeck from \"./Home/Deck/EditDeck/EditDeck\";\nimport EditCard from \"./Home/Deck/EditCard/EditCard\";\n\nfunction Layout() {\n  return (\n    <div>\n      <Header />\n      <div className=\"container\">\n      <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n\n      <Route path=\"/decks/new\">\n      <CreateDeck />\n      </Route>\n\n      <Route exact path=\"/decks/:deckId\">\n        <Deck />\n      </Route>\n\n      <Route path=\"/decks/:deckId/cards/new\">\n        <AddCard />\n      </Route>\n\n      <Route path=\"/decks/:deckId/study\">\n        <Study />\n      </Route>\n      \n      <Route path=\"/decks/:deckId/edit\">\n        <EditDeck />\n      </Route>\n\n      <Route path=\"/decks/:deckId/cards/:cardId/edit\">\n        <EditCard />\n      </Route>\n\n      <Route>\n        <NotFound />\n      </Route>\n\n      </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./Layout\";\n\n/**\n * App is a wrapper for <Layout>, you should not need to change this file.\n */\n\nfunction App() {\n  return (\n    <div className=\"app-routes\">\n      <Switch>\n        <Route path=\"/\">\n          <Layout />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}